#!/bin/bash
# must run in repo directory
TARGET_DIR=/srv/radico8

if [ "${EUID:-$(id -u)}" -ne 0 ]; then
    echo "Rerun this script as root! Exiting with non-zero error code."
    exit 1
fi

echo "Copying files..."
mkdir -p ${TARGET_DIR}/cartridges
touch ${TARGET_DIR}/playlist.txt
cp cartridges/radico8.lua ${TARGET_DIR}/cartridges
cp cartridges/radico8.p8 ${TARGET_DIR}/cartridges

rsync -r docker/ ${TARGET_DIR}/docker
cp install_carts start_radio ${TARGET_DIR}

echo "Installing systemd scripts..."
pushd /etc/systemd/system
cat << EOF > radico8.service
[Unit]
Description=Headless pico8 instance running radico8.
After=docker.service
Requires=docker.service

[Service]
Restart=always
ExecStart=${TARGET_DIR}/start_radio ${TARGET_DIR}/docker /opt/pico8 ${TARGET_DIR}/cartridges ${TARGET_DIR}/playlist.txt
ExecStop=docker kill radico8

[Install]
WantedBy=multi-user.target
EOF

cat << EOF > radico8-youtube.service
[Unit]
Description=Streams radico8 to youtube.
After=radico8.service
Requires=radico8.service

# should be impossible to hit this throttle limit due to sleep
StartLimitIntervalSec=5
StartLimitBurst=15

[Service]
Restart=always
ExecStartPre=-sleep .5s
ExecStartPre=-docker exec -i radico8 stop_ffmpeg rtmp://a.rtmp.youtube.com/live2
ExecStart=docker exec -i --env-file /etc/radico8/youtube.env radico8 stream_to_youtube rtmp://a.rtmp.youtube.com/live2
ExecStop=docker exec -i radico8 stop_ffmpeg rtmp://a.rtmp.youtube.com/live2

[Install]
WantedBy=radico8.service
EOF

cat << EOF > radico8-youtube-backup.service
[Unit]
Description=Streams radico8 to youtube backup url.
After=radico8.service
Requires=radico8.service

# should be impossible to hit this throttle limit due to sleep
StartLimitIntervalSec=5
StartLimitBurst=15

[Service]
Restart=always
ExecStartPre=-sleep .5s
ExecStartPre=-docker exec -i radico8 stop_ffmpeg rtmp://b.rtmp.youtube.com/live2?backup=1
ExecStart=docker exec -i --env-file /etc/radico8/youtube.env radico8 stream_to_youtube rtmp://b.rtmp.youtube.com/live2?backup=1
ExecStop=docker exec -i radico8 stop_ffmpeg rtmp://b.rtmp.youtube.com/live2?backup=1

[Install]
WantedBy=radico8.service
EOF

cat << EOF > radico8-icecast.service
[Unit]
Description=Streams radico8 to icecast.
After=radico8.service
Requires=radico8.service

# should be impossible to hit this throttle limit due to sleep
StartLimitIntervalSec=5
StartLimitBurst=15

[Service]
Restart=always
ExecStartPre=-sleep .5s
ExecStartPre=-docker exec -i radico8 stop_ffmpeg icecast
ExecStart=docker exec -i --env-file /etc/radico8/icecast.env radico8 stream_to_icecast host.docker.internal 8010
ExecStop=docker exec -i radico8 stop_ffmpeg icecast

[Install]
WantedBy=radico8.service
EOF

cat << EOF > radico8-install-carts.service
[Unit]
Description=Installs recent list of carts.

[Service]
ExecStart=${TARGET_DIR}/install_carts /srv/radico8/playlist.txt /srv/radico8/cartridges
EOF

cat << EOF > radico8-install-carts.timer
[Unit]
Description=Timer for radico8-install-carts.service.

[Timer]
OnCalendar=hourly
AccuracySec=1m
Persistent=true

[Install]
WantedBy=timers.target
EOF

cat << EOF > radico8-reboot.service
[Unit]
Description=Reboot radico8 once a week.

[Service]
ExecStart=systemctl restart radico8
EOF

cat << EOF > radico8-reboot.timer
[Unit]
Description=Timer for radico8-reboot.service

[Timer]
OnCalendar=Mon 01:00
AccuracySec=1m
Persistent=true

[Install]
WantedBy=timers.target
EOF
popd

echo "Reloading & restarting systemctl..."
systemctl daemon-reload
systemctl enable  radico8.service radico8-youtube.service radico8-youtube-backup.service radico8-icecast.service radico8-install-carts.timer radico8-reboot.timer radico8-reboot.service
systemctl restart radico8.service radico8-youtube.service radico8-youtube-backup.service radico8-icecast.service radico8-install-carts.timer radico8-reboot.timer radico8-install-carts.service
